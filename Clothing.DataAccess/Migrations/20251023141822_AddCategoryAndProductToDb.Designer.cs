// <auto-generated />
using System;
using Clothing.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clothing.DataAccess.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20251023141822_AddCategoryAndProductToDb")]
    partial class AddCategoryAndProductToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Clothing.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Men's clothing collection",
                            Name = "Men"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Women's fashion and apparel",
                            Name = "Women"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Children's wear",
                            Name = "Kids"
                        });
                });

            modelBuilder.Entity("Clothing.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ListPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("Price50")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Color = "Black",
                            Description = "Cotton slim-fit T-shirt",
                            ImageUrl = "/images/mens-tshirt.jpg",
                            ListPrice = 249.99m,
                            Name = "Men’s T-Shirt",
                            Price = 229.99m,
                            Price50 = 209.99m,
                            Size = "M",
                            Stock = 30
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            Color = "Blue",
                            Description = "Blue denim jacket with front pockets",
                            ImageUrl = "/images/womens-denim-jacket.jpg",
                            ListPrice = 200.00m,
                            Name = "Women’s Denim Jacket",
                            Price = 180.00m,
                            Price50 = 160.00m,
                            Size = "L",
                            Stock = 15
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 3,
                            Color = "Red",
                            Description = "Warm fleece hoodie for kids",
                            ImageUrl = "/images/kids-hoodie.jpg",
                            ListPrice = 249.99m,
                            Name = "Kids’ Hoodie",
                            Price = 229.99m,
                            Price50 = 209.99m,
                            Size = "S",
                            Stock = 25
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            Color = "White",
                            Description = "White long-sleeve formal shirt",
                            ImageUrl = "/images/mens-formal-shirt.jpg",
                            ListPrice = 299.99m,
                            Name = "Men’s Formal Shirt",
                            Price = 279.99m,
                            Price50 = 249.99m,
                            Size = "L",
                            Stock = 20
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2,
                            Color = "Yellow",
                            Description = "Light floral dress for warm days",
                            ImageUrl = "/images/womens-dress.jpg",
                            ListPrice = 349.99m,
                            Name = "Women’s Summer Dress",
                            Price = 329.99m,
                            Price50 = 309.99m,
                            Size = "M",
                            Stock = 10
                        });
                });

            modelBuilder.Entity("Clothing.Models.Product", b =>
                {
                    b.HasOne("Clothing.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Clothing.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
